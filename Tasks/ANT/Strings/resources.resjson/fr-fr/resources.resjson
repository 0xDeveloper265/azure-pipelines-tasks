{
  "loc.friendlyName": "Ant",
  "loc.helpMarkDown": "[Plus d'informations](https://go.microsoft.com/fwlink/?LinkID=613718)",
  "loc.description": "Générer avec Apache Ant",
  "loc.instanceNameFormat": "Ant $(options) $(antBuildFile)",
  "loc.group.displayName.junitTestResults": "Résultats du test JUnit",
  "loc.group.displayName.codeCoverage": "Couverture du code",
  "loc.group.displayName.advanced": "Avancé",
  "loc.input.label.antBuildFile": "Fichier de build Ant",
  "loc.input.help.antBuildFile": "Relative path from the repository root to the Ant build file.",
  "loc.input.label.options": "Options",
  "loc.input.help.options": "Provide any options to pass to the Ant command line. You can provide your own properties (for example, ***-DmyProperty=myPropertyValue***) and also use built-in variables (for example, ***-DcollectionId=$(system.collectionId)***). Alternatively, the built-in variables are already set as environment variables during the build and can be passed directly (for example, ***-DcollectionIdAsEnvVar=%SYSTEM_COLLECTIONID%***).",
  "loc.input.label.targets": "Cible(s)",
  "loc.input.help.targets": "An optional, space-separated list of targets to build. If not specified, the `default` target will be used. If no `default` target is defined, Ant 1.6.0 and later will build all top-level tasks.",
  "loc.input.label.publishJUnitResults": "Publish to TFS/Team Services",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit test results produced by the Ant build to TFS/Team Services. Each test results file matching `Test Results Files` will be published as a test run in TFS/Team Services.",
  "loc.input.label.testResultsFiles": "Fichiers des résultats des tests",
  "loc.input.help.testResultsFiles": "Test results files path. Wildcards can be used. For example, `**/TEST-*.xml` for all XML files whose name starts with TEST-.",
  "loc.input.label.testRunTitle": "Titre de l'exécution du test",
  "loc.input.help.testRunTitle": "Provide a name for the test run.",
  "loc.input.label.codeCoverageTool": "Outil de couverture du code",
  "loc.input.help.codeCoverageTool": "Select the code coverage tool. For on-premises agent support, refer to the `More Information` link below.",
  "loc.input.label.classFilesDirectories": "Répertoires de fichiers de classe",
  "loc.input.help.classFilesDirectories": "Comma-separated list of relative paths from the Ant build file to directories containing class files and archive files (JAR, WAR, etc.). Code coverage is reported for class files in these directories. For example: target/classes,target/testClasses.",
  "loc.input.label.classFilter": "Filtres d'inclusion/exclusion de classes",
  "loc.input.help.classFilter": "Comma-separated list of filters to include or exclude classes from collecting code coverage. For example: +:com.*,+:org.*,-:my.app*.*.",
  "loc.input.label.srcDirectories": "Répertoires de fichiers sources",
  "loc.input.help.srcDirectories": "Comma-separated list of relative paths from the Ant build file to source code directories. Code coverage reports will use these to highlight source code. For example: src/java,src/Test.",
  "loc.input.label.antHomeUserInputPath": "Définir le chemin de ANT_HOME",
  "loc.input.help.antHomeUserInputPath": "Si elle est définie, cette valeur remplace les variables d'environnement ANT_HOME existantes par le chemin spécifié.",
  "loc.input.label.javaHomeSelection": "Définir JAVA_HOME par",
  "loc.input.help.javaHomeSelection": "Définit JAVA_HOME en sélectionnant une version de JDK qui sera découverte au moment des builds ou en tapant le chemin de JDK.",
  "loc.input.label.jdkVersion": "Version de JDK",
  "loc.input.help.jdkVersion": "Essaiera de découvrir le chemin d'accès à la version du JDK sélectionné et définira JAVA_HOME en conséquence.",
  "loc.input.label.jdkUserInputPath": "Chemin d'accès à JDK",
  "loc.input.help.jdkUserInputPath": "Définissez JAVA_HOME sur le chemin d'accès indiqué.",
  "loc.input.label.jdkArchitecture": "Architecture de JDK",
  "loc.input.help.jdkArchitecture": "Optionally supply the architecture (x86, x64) of the JDK."
}