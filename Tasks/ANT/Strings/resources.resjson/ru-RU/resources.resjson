{
  "loc.friendlyName": "Ant",
  "loc.helpMarkDown": "[Подробнее...](https://go.microsoft.com/fwlink/?LinkID=613718)",
  "loc.description": "Сборка с помощью Apache Ant",
  "loc.instanceNameFormat": "Ant $(options) $(antBuildFile)",
  "loc.group.displayName.junitTestResults": "Результаты теста JUnit",
  "loc.group.displayName.codeCoverage": "Объем протестированного кода",
  "loc.group.displayName.advanced": "Дополнительно",
  "loc.input.label.antBuildFile": "Файл сборки Ant",
  "loc.input.help.antBuildFile": "Relative path from the repository root to the Ant build file.",
  "loc.input.label.options": "Параметры",
  "loc.input.help.options": "Provide any options to pass to the Ant command line. You can provide your own properties (for example, ***-DmyProperty=myPropertyValue***) and also use built-in variables (for example, ***-DcollectionId=$(system.collectionId)***). Alternatively, the built-in variables are already set as environment variables during the build and can be passed directly (for example, ***-DcollectionIdAsEnvVar=%SYSTEM_COLLECTIONID%***).",
  "loc.input.label.targets": "Платформы",
  "loc.input.help.targets": "An optional, space-separated list of targets to build. If not specified, the `default` target will be used. If no `default` target is defined, Ant 1.6.0 and later will build all top-level tasks.",
  "loc.input.label.publishJUnitResults": "Publish to TFS/Team Services",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit test results produced by the Ant build to TFS/Team Services. Each test results file matching `Test Results Files` will be published as a test run in TFS/Team Services.",
  "loc.input.label.testResultsFiles": "Файлы результатов тестов",
  "loc.input.help.testResultsFiles": "Test results files path. Wildcards can be used. For example, `**/TEST-*.xml` for all XML files whose name starts with TEST-.",
  "loc.input.label.testRunTitle": "Заголовок тестового запуска",
  "loc.input.help.testRunTitle": "Provide a name for the test run.",
  "loc.input.label.codeCoverageTool": "Средство оценки объемов протестированного кода",
  "loc.input.help.codeCoverageTool": "Select the code coverage tool. For on-premises agent support, refer to the `More Information` link below.",
  "loc.input.label.classFilesDirectories": "Каталоги файлов классов",
  "loc.input.help.classFilesDirectories": "Comma-separated list of relative paths from the Ant build file to directories containing class files and archive files (JAR, WAR, etc.). Code coverage is reported for class files in these directories. For example: target/classes,target/testClasses.",
  "loc.input.label.classFilter": "Фильтры включения и исключения классов",
  "loc.input.help.classFilter": "Comma-separated list of filters to include or exclude classes from collecting code coverage. For example: +:com.*,+:org.*,-:my.app*.*.",
  "loc.input.label.srcDirectories": "Каталоги файлов с исходным кодом",
  "loc.input.help.srcDirectories": "Comma-separated list of relative paths from the Ant build file to source code directories. Code coverage reports will use these to highlight source code. For example: src/java,src/Test.",
  "loc.input.label.antHomeUserInputPath": "Задать путь ANT_HOME",
  "loc.input.help.antHomeUserInputPath": "Если этот параметр задан, переопределяет любую существующую переменную среды ANT_HOME заданным путем.",
  "loc.input.label.javaHomeSelection": "Установка JAVA_HOME с помощью",
  "loc.input.help.javaHomeSelection": "Задается JAVA_HOME указанием версии JDK, которая будет обнаруживаться во время сборок, или указанием пути к JDK вручную.",
  "loc.input.label.jdkVersion": "Версия JDK",
  "loc.input.help.jdkVersion": "Пытается определить путь к выбранной версии JDK и установить переменную JAVA_HOME соответствующим образом.",
  "loc.input.label.jdkUserInputPath": "Путь к JDK",
  "loc.input.help.jdkUserInputPath": "Установка для JAVA_HOME определенного пути.",
  "loc.input.label.jdkArchitecture": "Архитектура JDK",
  "loc.input.help.jdkArchitecture": "Optionally supply the architecture (x86, x64) of the JDK."
}