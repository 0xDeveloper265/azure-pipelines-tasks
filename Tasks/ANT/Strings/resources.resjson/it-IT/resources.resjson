{
  "loc.friendlyName": "Ant",
  "loc.helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?LinkID=613718)",
  "loc.description": "Consente di compilare con Apache Ant",
  "loc.instanceNameFormat": "Ant $(options) $(antBuildFile)",
  "loc.group.displayName.junitTestResults": "Risultati del test JUnit",
  "loc.group.displayName.codeCoverage": "Code coverage",
  "loc.group.displayName.advanced": "Avanzate",
  "loc.input.label.antBuildFile": "File di compilazione Ant",
  "loc.input.help.antBuildFile": "Relative path from the repository root to the Ant build file.",
  "loc.input.label.options": "Opzioni",
  "loc.input.help.options": "Provide any options to pass to the Ant command line. You can provide your own properties (for example, ***-DmyProperty=myPropertyValue***) and also use built-in variables (for example, ***-DcollectionId=$(system.collectionId)***). Alternatively, the built-in variables are already set as environment variables during the build and can be passed directly (for example, ***-DcollectionIdAsEnvVar=%SYSTEM_COLLECTIONID%***).",
  "loc.input.label.targets": "Destinazione/i",
  "loc.input.help.targets": "An optional, space-separated list of targets to build. If not specified, the `default` target will be used. If no `default` target is defined, Ant 1.6.0 and later will build all top-level tasks.",
  "loc.input.label.publishJUnitResults": "Publish to TFS/Team Services",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit test results produced by the Ant build to TFS/Team Services. Each test results file matching `Test Results Files` will be published as a test run in TFS/Team Services.",
  "loc.input.label.testResultsFiles": "File dei risultati del test",
  "loc.input.help.testResultsFiles": "Test results files path. Wildcards can be used. For example, `**/TEST-*.xml` for all XML files whose name starts with TEST-.",
  "loc.input.label.testRunTitle": "Titolo esecuzione dei test",
  "loc.input.help.testRunTitle": "Provide a name for the test run.",
  "loc.input.label.codeCoverageTool": "Strumento di code coverage",
  "loc.input.help.codeCoverageTool": "Select the code coverage tool. For on-premises agent support, refer to the `More Information` link below.",
  "loc.input.label.classFilesDirectories": "Directory file di classe",
  "loc.input.help.classFilesDirectories": "Comma-separated list of relative paths from the Ant build file to directories containing class files and archive files (JAR, WAR, etc.). Code coverage is reported for class files in these directories. For example: target/classes,target/testClasses.",
  "loc.input.label.classFilter": "Filtri di inclusione/esclusione classe",
  "loc.input.help.classFilter": "Comma-separated list of filters to include or exclude classes from collecting code coverage. For example: +:com.*,+:org.*,-:my.app*.*.",
  "loc.input.label.srcDirectories": "Directory file di origine",
  "loc.input.help.srcDirectories": "Comma-separated list of relative paths from the Ant build file to source code directories. Code coverage reports will use these to highlight source code. For example: src/java,src/Test.",
  "loc.input.label.antHomeUserInputPath": "Imposta percorso di ANT_HOME",
  "loc.input.help.antHomeUserInputPath": "Se è impostato, esegue l'override di eventuali variabili di ambiente ANT_HOME esistenti con il percorso specificato.",
  "loc.input.label.javaHomeSelection": "Imposta JAVA_HOME per",
  "loc.input.help.javaHomeSelection": "Consente di impostare JAVA_HOME selezionando una versione di JDK che verrà individuata durante le compilazioni oppure immettendo manualmente un percorso JDK.",
  "loc.input.label.jdkVersion": "Versione JDK",
  "loc.input.help.jdkVersion": "Prova a individuare il percorso della versione selezionata di JDK e imposta JAVA_HOME di conseguenza.",
  "loc.input.label.jdkUserInputPath": "Percorso JDK",
  "loc.input.help.jdkUserInputPath": "Consente di impostare JAVA_HOME sul percorso specificato.",
  "loc.input.label.jdkArchitecture": "Architettura JDK",
  "loc.input.help.jdkArchitecture": "Optionally supply the architecture (x86, x64) of the JDK."
}