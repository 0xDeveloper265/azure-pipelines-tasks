{
  "loc.friendlyName": "Ant",
  "loc.helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?LinkID=613718)",
  "loc.description": "Apache Ant로 빌드",
  "loc.instanceNameFormat": "Ant $(options) $(antBuildFile)",
  "loc.group.displayName.junitTestResults": "JUnit 테스트 결과",
  "loc.group.displayName.codeCoverage": "코드 검사",
  "loc.group.displayName.advanced": "고급",
  "loc.input.label.antBuildFile": "Ant 빌드 파일",
  "loc.input.help.antBuildFile": "Relative path from the repository root to the Ant build file.",
  "loc.input.label.options": "옵션",
  "loc.input.help.options": "Provide any options to pass to the Ant command line. You can provide your own properties (for example, ***-DmyProperty=myPropertyValue***) and also use built-in variables (for example, ***-DcollectionId=$(system.collectionId)***). Alternatively, the built-in variables are already set as environment variables during the build and can be passed directly (for example, ***-DcollectionIdAsEnvVar=%SYSTEM_COLLECTIONID%***).",
  "loc.input.label.targets": "대상",
  "loc.input.help.targets": "An optional, space-separated list of targets to build. If not specified, the `default` target will be used. If no `default` target is defined, Ant 1.6.0 and later will build all top-level tasks.",
  "loc.input.label.publishJUnitResults": "Publish to TFS/Team Services",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit test results produced by the Ant build to TFS/Team Services. Each test results file matching `Test Results Files` will be published as a test run in TFS/Team Services.",
  "loc.input.label.testResultsFiles": "테스트 결과 파일",
  "loc.input.help.testResultsFiles": "Test results files path. Wildcards can be used. For example, `**/TEST-*.xml` for all XML files whose name starts with TEST-.",
  "loc.input.label.testRunTitle": "테스트 실행 제목",
  "loc.input.help.testRunTitle": "Provide a name for the test run.",
  "loc.input.label.codeCoverageTool": "코드 검사 도구",
  "loc.input.help.codeCoverageTool": "Select the code coverage tool. For on-premises agent support, refer to the `More Information` link below.",
  "loc.input.label.classFilesDirectories": "클래스 파일 디렉터리",
  "loc.input.help.classFilesDirectories": "Comma-separated list of relative paths from the Ant build file to directories containing class files and archive files (JAR, WAR, etc.). Code coverage is reported for class files in these directories. For example: target/classes,target/testClasses.",
  "loc.input.label.classFilter": "클래스 포함/제외 필터",
  "loc.input.help.classFilter": "Comma-separated list of filters to include or exclude classes from collecting code coverage. For example: +:com.*,+:org.*,-:my.app*.*.",
  "loc.input.label.srcDirectories": "원본 파일 디렉터리",
  "loc.input.help.srcDirectories": "Comma-separated list of relative paths from the Ant build file to source code directories. Code coverage reports will use these to highlight source code. For example: src/java,src/Test.",
  "loc.input.label.antHomeUserInputPath": "ANT_HOME 경로 설정",
  "loc.input.help.antHomeUserInputPath": "설정하는 경우 기존 ANT_HOME 환경 변수를 지정된 경로로 재정의합니다.",
  "loc.input.label.javaHomeSelection": "JAVA_HOME 설정 방법",
  "loc.input.help.javaHomeSelection": "빌드 중에 검색될 JDK 버전을 선택하거나 수동으로 JDK 경로를 입력하여 JAVA_HOME을 설정합니다.",
  "loc.input.label.jdkVersion": "JDK 버전",
  "loc.input.help.jdkVersion": "선택한 JDK 버전의 경로에 대한 검색을 시도하고 그에 따라 JAVA_HOME을 설정하게 됩니다.",
  "loc.input.label.jdkUserInputPath": "JDK 경로",
  "loc.input.help.jdkUserInputPath": "JAVA_HOME을 지정된 경로로 설정합니다.",
  "loc.input.label.jdkArchitecture": "JDK 아키텍처",
  "loc.input.help.jdkArchitecture": "Optionally supply the architecture (x86, x64) of the JDK."
}